---
- hosts: all
  become: true
  vars:
    - pri_domain_name: 'test.vagrant.local'
  roles:
    - role: ansible-ntp
  tasks:
    - name: pre-reqs
      dnf:
        name: "{{ item }}"
        state: present
      with_items:
        - libselinux-python
      when: >
            (ansible_os_family == "RedHat" and
            ansible_distribution == "Fedora")

    - name: pre-reqs
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - libselinux-python
      when: >
            (ansible_os_family == "RedHat" and
            ansible_distribution != "Fedora")

    - name: updating /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: "^{{ hostvars[item].ansible_ssh_host }} {{ item }} {{ item }}.{{ pri_domain_name }}"
        line: "{{ hostvars[item].ansible_ssh_host }} {{ item }} {{ item }}.{{ pri_domain_name }}"
        state: present
      with_items: groups['all']

- hosts: ddi-nodes
  become: true
  handlers:
    - name: 'restart pdns'
      service:
        name: "pdns"
        state: "restarted"
        sleep: 10
  remote_user: vagrant
  vars:
    - deb_db_password: $6$3BFlAptb$S4313dXRWU12lLTXbh2/h3mBOdUWA1pQMQ7uYwWVT32Ko.R.cRdIZETFHKbgdpWRNbRe6XoKECIEFxqgFu2vp.
    - enable_pdns_server_logging: true
    - enable_pdns_web_server: true
    - galera_cluster_bind_address: '{{ ansible_eth1.ipv4.address }}'  #'{{ ansible_enp0s8.ipv4.address }}'
    - galera_cluster_nodes_group: 'ddi-nodes'
    - install_dhcp: false  #defines if dhcp services should be installed
    - install_dns: true  #defines if powerdns (dns) services should be installed
    - install_logstash: false  #defines if logstash should be installed to monitor powerdns
    - install_phpipam: true  #defines if phpipam services should be installed
    - install_quagga: false  #defines if quagga (routing) should be installed for AnyCast services
    - mysql_root_password: $6$3BFlAptb$S4313dXRWU12lLTXbh2/h3mBOdUWA1pQMQ7uYwWVT32Ko.R.cRdIZETFHKbgdpWRNbRe6XoKECIEFxqgFu2vp.
    - pdns_db_cluster: true
    - pdns_db_name: pdns
    - pdns_db_pass: pdns
    - pdns_db_user: pdns
    - phpipam_db_cluster: true
    - phpipam_define_cron_jobs: true
    - phpipam_pre_load_db: true
    - phpipam_url_rewrite: true
    - phpipam_version: 1.2.1
    - pri_domain_name: vagrant.local
  roles:
    - role: ansible-apache2
    - role: ansible-mariadb-galera-cluster
      when: >
            pdns_db_cluster or
            phpipam_db_cluster
    - role: ansible-mariadb-mysql
      when: >
            not pdns_db_cluster and
            not phpipam_db_cluster
    - role: ansible-isc-dhcp
      when: >
            install_dhcp is defined and
            install_dhcp
    - role: ansible-logstash
      when: >
            install_logstash is defined and
            install_logstash
    - role: ansible-phpipam
      when: >
            install_phpipam is defined and
            install_phpipam
    - role: ansible-powerdns
      when: >
            install_dns is defined and
            install_dns
    - role: ansible-quagga
      when: >
            (install_quagga is defined and
            install_quagga) and
            (enable_pdns_anycast is defined and
            enable_pdns_anycast)
  tasks:
    - name: Allowing PDNS to listen on all interfaces
      lineinfile:
        dest: "/etc/powerdns/pdns.conf"
        regexp: "^local-address="
        line: "local-address=0.0.0.0"
      notify: restart pdns
